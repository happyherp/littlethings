largestProduct :: Int -> [Int] -> Int
largestProduct n [] = 1
largestProduct n seq = max thisprod (largestProduct n (tail seq))
   where thisprod = foldl (*) 1 (take n seq)

number :: [Int]
number = map (read . (:[])) ("73167176531330624919225119674426574742355349194934969835" 
    ++"203127745063262395783180169848018694788518438586156078911294949545950173795833195285"
    ++"3208805511125406987471585238630507156932909632952274430435576689664895044524452316173"
    ++"18564030987111217223831136222989342338030813533627661428280644448664523874930358907296"
    ++"290491560440772390713810515859307960866701724271218839987979087922749219016997208880937"
    ++"766572733300105336788122023542180975125454059475224352584907711670556013604839586446706"
    ++"3244157221553975369781797784617406495514929086256932197846862248283972241375657056057490"
    ++"2614079729686524145351004748216637048440319989000889524345065854122758866688116427171479"
    ++"92444292823086346567481391912316282458617866458359124566529476545682848912883142607690042"
    ++"24219022671055626321111109370544217506941658960408071984038509624554443629812309878799272"
    ++"442849091888458015616609791913387549920052406368991256071760605886116467109405077541002256"
    ++"98315520005593572972571636269561882670428252483600823257530420752963450")